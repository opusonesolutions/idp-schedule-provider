image: python:3.7-slim

stages:
  - static-analysis
  - testing
  - build
  - deploy

flake8:
  stage: static-analysis
  before_script:
    - pip install flake8
  script:
    - flake8 idp_schedule_provider tests

black:
  stage: static-analysis
  before_script:
    - pip install black
  script:
    - black --check -v --diff idp_schedule_provider tests

isort:
  stage: static-analysis
  before_script:
    - pip install isort
  script:
    - isort --check idp_schedule_provider tests

bandit:
  stage: static-analysis
  before_script:
    - pip install bandit
  script:
    - bandit -r -ll -f screen idp_schedule_provider tests

mypy:
  stage: static-analysis
  before_script:
    - pip install poetry
    - poetry install
  script:
    - poetry run mypy idp_schedule_provider

unit_tests:
  stage: testing
  before_script:
    - pip install poetry
    - poetry install
  script:
    - poetry run pytest

build:
  stage: build
  image: docker:19.03.8
  script: |
    set -e -x
    image=${DKR_REGISTRY}/gridos/$CI_PROJECT_NAME
    if [[ $CI_COMMIT_REF_NAME == master || "$CI_COMMIT_TAG" != "" ]]; then
        image=$image:$CI_COMMIT_REF_NAME
    else
        image=$image:COMMIT-$CI_COMMIT_SHA
    fi
    docker build -t $image --build-arg JFROG_USER=$JFROG_USER --build-arg JFROG_PASSWORD=$JFROG_PASSWORD --label commit=$CI_COMMIT_SHA .
    docker push $image
  only:
    - master
    - tags

pages:
  stage: build
  before_script:
    - pip install poetry
    - poetry install
  script:
    - poetry run create_api_docs
  artifacts:
    when: on_success
    paths:
      - public
  only:
    - master

deploy:
  stage: deploy
  image: ${DKR_REGISTRY}/gridos/gridos-deploy:master
  script:
    - source /usr/src/run
    - main deploy -f /usr/src/configs/stacks/idp-test-forecaster/stack.yml forecaster test $CI_COMMIT_REF_NAME
  environment:
    name: forecaster-test
    url: http://idp-schedules.gridos.com:5501
  only:
    - master
